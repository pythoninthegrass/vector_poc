#cloud-config
# vim: syntax=yaml

output: {all: '| tee -a /var/log/cloud-init.log'}   # store logs inside vm

timezone: "America/Chicago"

hostname: ubuntu
create_hostname_file: true
manage_etc_hosts: localhost
fqdn: ubuntu.local
prefer_fqdn_over_hostname: false

package_update: true      # default: true
package_upgrade: true     # default: false

apt:
  conf: |
    APT::Get::Assume-Yes "true";
    APT::Get::Show-Progress "false";
    APT::Get::Install-Recommends "false";
    Dpkg::Options::="--force-confold";
    Dpkg::Options::="--force-unsafe-io";
  sources:
    deadsnakes:
      source: deb https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu $RELEASE main
      keyid: F23C5A6CF475977595C89F51BA6932366A755776

packages:
  - apt-transport-https
  - bat
  - bind9-dnsutils
  - build-essential
  - ca-certificates
  - cloud-init
  - curl
  - git
  - gnupg-agent
  - net-tools
  - python3
  - python3-pip
  - software-properties-common
  - ssh
  - ssh-import-id
  - tree
  - ufw
  - vim
  - wget

users:
  - default

  - name: ubuntu
    sudo: ALL=(ALL) NOPASSWD:ALL
    groups: [adm, admin, users, wheel]
    shell: /bin/bash
    lock_passwd: true
    ssh_import_id:
      - gh:pythoninthegrass
    ssh_authorized_keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDIUQ//QOZBVOyG9ieqMG2vVVP7KMI0B9DIyXE4PioCTaw1P2/oGRcqr0pAmqrxtO7ADNcFSwW5hdAr9L4KGc+CUns/nZ16M1fhfuW6tVnYGaSgwGYCIU1DCJ+ofvdWJOkAAmvui9w6g5VgwxdC2V27lITgy57E9XwO16diywrKMT9M5sypX51nVQOgeDJR8fO8LaT0kWuBtOtOuFNaZzD0eHiciojM95alIbJthCT10fvTGVOQGdODzIuKlVQjIqOZ78qFNB0E9rfeTuLgdZ5CRrFqkDfaCYMwgNWmzBt3YnomnhndpuqwftRdOoNi2FmJegZDp5prDOTisfB6r4TJriWq165hF9M8RKOqyyq0C0+h7+UXlhhZk4WWEOVsSTAx2MlFMdk9UrOMdqq2dqFZfaWSPRvM8m8JugTXloYhoK/nderzTa2qoKJCZadJG+ul+wQJpS/dqItnGowcO7mgFSsxMhuCJbxWjFpjwvZkVBLl60f9l2FU1/515onFwz0= lance.stephens@mbp.local

  - name: ansible
    sudo: ALL=(ALL) NOPASSWD:ALL
    groups: [adm, admin, users, wheel]
    shell: /bin/bash
    passwd: ansible
    lock_passwd: true
    ssh_import_id:
      - gh:pythoninthegrass
    ssh_authorized_keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDIUQ//QOZBVOyG9ieqMG2vVVP7KMI0B9DIyXE4PioCTaw1P2/oGRcqr0pAmqrxtO7ADNcFSwW5hdAr9L4KGc+CUns/nZ16M1fhfuW6tVnYGaSgwGYCIU1DCJ+ofvdWJOkAAmvui9w6g5VgwxdC2V27lITgy57E9XwO16diywrKMT9M5sypX51nVQOgeDJR8fO8LaT0kWuBtOtOuFNaZzD0eHiciojM95alIbJthCT10fvTGVOQGdODzIuKlVQjIqOZ78qFNB0E9rfeTuLgdZ5CRrFqkDfaCYMwgNWmzBt3YnomnhndpuqwftRdOoNi2FmJegZDp5prDOTisfB6r4TJriWq165hF9M8RKOqyyq0C0+h7+UXlhhZk4WWEOVsSTAx2MlFMdk9UrOMdqq2dqFZfaWSPRvM8m8JugTXloYhoK/nderzTa2qoKJCZadJG+ul+wQJpS/dqItnGowcO7mgFSsxMhuCJbxWjFpjwvZkVBLl60f9l2FU1/515onFwz0= lance.stephens@mbp.local

ansible:
  install_method: pip
  package_name: ansible
  run_user: ansible
  galaxy:
    actions:
      - ["ansible-galaxy", "collection", "install", "community.general"]
      - ["ansible-galaxy", "collection", "install", "community.docker"]

write_files:
  - path: '/home/ubuntu/.bashrc'
    owner: 'ubuntu:ubuntu'
    permissions: '0644'
    append: false
    defer: true
    content: |
      # Verify that shell is interactive
      if [[ $- != *i* ]]; then return; fi

      [ -f ~/.bash_aliases ] && . ~/.bash_aliases

      alias update='sudo apt update && sudo apt upgrade -y && sudo apt dist-upgrade -y && sudo apt autoremove -y && sudo apt auto-clean'
      alias python='python3.11'
      alias ll='ls -FGlAhp'
      alias mkdir='mkdir -pv'
      alias ..='cd ../'
      alias ...='cd ../../'
      cd() { builtin cd "$@"; ll; }

      HISTCONTROL=ignoreboth
      shopt -s histappend
      HISTSIZE=ubuntu
      HISTFILESIZE=2000

      # Forward search in bash (step forward via ctrl-s)
      stty -ixon

      shopt -s checkwinsize

      if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
          debian_chroot=$(cat /etc/debian_chroot)
      fi

      case "$TERM" in
        xterm-color|*-256color) color_prompt=yes;;
      esac

      if [ "$color_prompt" = yes ]; then
          PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\] \nλ '
      else
          PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w \nλ '
      fi
      unset color_prompt force_color_prompt

      case "$TERM" in
      xterm*|rxvt*)
          PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
          ;;
      *)
          ;;
      esac

  - path: '/home/ubuntu/.bash_aliases'
    owner: 'ubuntu:ubuntu'
    permissions: '0644'
    append: false
    defer: true
    content: |
      # Linuxbrew shellenv (this should come first)
      [ -f "/home/linuxbrew/.linuxbrew/bin/brew" ] && eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

      # $PATH
      export PATH="$HOME/.local/bin:$HOME/.cargo/bin:$HOME/.asdf/bin:$HOME/.asdf/shims:$PATH"

      # set default text editor
      # * if this fails on ubuntu, try `select-editor`
      export EDITOR=vim

  - path: '/home/ubuntu/.bash_profile'
    owner: 'ubuntu:ubuntu'
    permissions: '0644'
    append: false
    defer: true
    content: |
      [[ -s ~/.bashrc ]] && source ~/.bashrc

  - path: '/etc/sysctl.d/enabled_ipv4_forwarding.conf'
    content: |
      net.ipv4.conf.all.forwarding=1

  - path: '/etc/cloud/cloud.cfg.d/99-disable-network-config.cfg'
    owner: 'root:root'
    permissions: '0644'
    content: |
      network: {config: disabled}

  - path: '/etc/netplan/50-cloud-init.yaml'
    owner: 'root:root'
    permissions: '0644'
    append: false
    content: |
      network:
        version: 2
        ethernets:
          eth0:
            dhcp4: true
            match:
              name: eth*
            set-name: eth0
            nameservers:
              addresses: [1.1.1.1, 1.0.0.1]

runcmd:
  - mkdir -p /home/ubuntu/.ssh
  - mkdir -p /home/ubuntu/git
  - ssh-keyscan github.com >> /home/ubuntu/.ssh/known_hosts
  - apt-get update
  - apt-get install -y software-properties-common
  - add-apt-repository -y ppa:deadsnakes/ppa
  - apt-get update
  - apt-get install -y python3.11 python3.11-dev
  - python3.11 -m pip install poetry

bootcmd:
  - cloud-init-per once chmod -R 0777 /home/ubuntu
  - cloud-init-per once chown -R ubuntu:ubuntu /home/ubuntu
  - cloud-init-per once touch /var/log/ansible.log
  - cloud-init-per once chmod 0777 /var/log/ansible.log
  - cloud-init-per once chown ansible:ansible /var/log/ansible.log

final_message: "The system is finally up, after $UPTIME seconds"
