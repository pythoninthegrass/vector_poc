api:
  enabled: true
  address: "0.0.0.0:8686"
  playground: true

sources:
  docker:
    type: docker_logs
    docker_host: "unix:///var/run/docker.sock"
    auto_partial_merge: true
    partial_event_marker_field: "_partial"
    retry_backoff_secs: 1
    include_containers: ["*"]
    include_images: ["*"]

  metrics:
    type: host_metrics
    filesystem:
      devices:
        excludes: ["^/dev/loop[0-9]+$"]

  logs:
    type: file
    include:
      - /var/log/**/*.log
    exclude:
      - fct_uninstall.log
      - fsck_*.log
      - launchd.log
      - nix-daemon.log
      - shutdown_monitor.log
      - wifi.log
    read_from: beginning
    ignore_older_secs: 86400

transforms:
  parse_logs:
    type: remap
    inputs:
      - docker
      - logs
    source: |
      . = parse_json(.message) ?? .
      if exists(.timestamp) {
        .timestamp = parse_timestamp!(.timestamp, format: "%+")
      } else {
        .timestamp = now()
      }
      .container_name = .container_name || "unknown"
      .image = .image || "unknown"
      if exists(.level) {
        .level = downcase(string!(.level))
      } else {
        .level = "info"
      }

  dedupe:
    type: dedupe
    inputs:
      - parse_logs
    cache:
      num_events: 5000

sinks:
  loki:
    type: loki
    inputs:
      - dedupe
    endpoint: "http://gateway:3100"
    encoding:
      codec: json
    labels:
      container: '{{ container_name }}'
      source: '{{ source_type }}'
      level: '{{ level }}'
    remove_timestamp: false
    out_of_order_action: accept
    tenant_id: "default"
    batch:
      max_events: 1000
      timeout_secs: 1
    healthcheck:
      enabled: true
      uri_path: "/ready"
    request:
      retry_attempts: 3
      retry_initial_backoff_secs: 1
      retry_max_backoff_secs: 10
      retry_max_duration_secs: 60
      timeout_secs: 30

  prometheus:
    type: prometheus_exporter
    inputs:
      - metrics
    address: "0.0.0.0:9090"
    default_namespace: "vector_metrics"
